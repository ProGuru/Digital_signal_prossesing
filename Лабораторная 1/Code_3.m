% вариант 2
clc; clear;
f1 = 120;
%f2 = 120;
T = 0.05/2; % время действия сигнала
dt = 0.001; % интервал дискредитации

fs = 1/dt; % частота дискретизации (s = sample) = 1/0,0.001 = 1 кГц

N = fix(T/dt); % число отсчетов в реализации (перевод в целое число)
t = 0:dt:(N-1)*dt; % вектор дискретизации по времени
n = 0:1:(N-1); % array of counts
df = 1 / T; % интервал дискретизации (= 4 Гц)
f = n * df; % recovered freq

x1 = sin(2*pi*f1*t); % return a vector x of sinus - non odd
x2 = cos(2*pi*f1*t); % return a vector x of sinus - non odd

X1=fft(x1); % спектр сигнала х (ДПФ)
X2=fft(x2); % спектр сигнала х (ДПФ)

xv1 = ifft(X1); % восстановленная по спектру последовательность (ОДПФ)
xv2 = ifft(X2); % восстановленная по спектру последовательность (ОДПФ)

p1 = sum(x1.^2)/N; % равенство персиваля
p2 = sum(abs(X1).^2)/(N^2);

if (round(10^4*p1)/10^4 == round(10^4*p2)/10^4) % округляем до 0,0001
  printf("Равенство Персиваля для чётной функции выполняется, p1 = %d, p2 = %d", p1, p2);
else
  printf("Равенство Персиваля для чётной функции НЕ выполняется, p1 = %d, p2 = %d", p1, p2);
endif

p1 = sum(x2.^2)/N; % равенство персиваля
p2 = sum(abs(X2).^2)/(N^2);

if (round(10^4*p1)/10^4 == round(10^4*p2)/10^4) % округляем до 0,0001
  printf("\nРавенство Персиваля для нечётной функции выполняется, p1 = %d, p2 = %d", p1, p2);
else
  printf("\nРавенство Персиваля для нечётной функции НЕ выполняется, p1 = %d, p2 = %d", p1, p2);
endif

subplot(411), plot(t,x1,'-k;x1(t);'),  title('Чётный сигнал'), xlabel('с'), grid minor
subplot(412), plot(t,x2,'-k;x2(t);'), title('Нечётный сигнал'), xlabel('с'), grid minor;
subplot(413), plot(f,abs(X1),'-g;abs(X1(f);'), title('Спектр чётного сигнала'), xlabel('Гц'), grid minor;
subplot(414), plot(f,abs(X2),'-g;abs(X2(f);'), title('Спектр нечётного сигнала'), xlabel('Гц'), grid minor;
